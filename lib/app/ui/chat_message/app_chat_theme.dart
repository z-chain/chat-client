import 'package:flutter/material.dart';
import 'package:flutter_chat_ui/flutter_chat_ui.dart';

class AppChatTheme extends ChatTheme {
  const AppChatTheme({
    Widget? attachmentButtonIcon,
    required Color backgroundColor,
    TextStyle dateDividerTextStyle = const TextStyle(
      color: neutral2,
      fontFamily: 'Avenir',
      fontSize: 12,
      fontWeight: FontWeight.w800,
      height: 1.333,
    ),
    Widget? deliveredIcon,
    Widget? documentIcon,
    TextStyle emptyChatPlaceholderTextStyle = const TextStyle(
      color: neutral2,
      fontFamily: 'Avenir',
      fontSize: 16,
      fontWeight: FontWeight.w500,
      height: 1.5,
    ),
    Color errorColor = error,
    Widget? errorIcon,
    Color inputBackgroundColor = neutral0,
    BorderRadius inputBorderRadius = const BorderRadius.vertical(
      top: Radius.circular(20),
    ),
    EdgeInsetsGeometry inputPadding = EdgeInsets.zero,
    Color inputTextColor = neutral7,
    Color? inputTextCursorColor,
    InputDecoration inputTextDecoration = const InputDecoration(
      border: InputBorder.none,
      contentPadding: EdgeInsets.zero,
      isCollapsed: true,
    ),
    TextStyle inputTextStyle = const TextStyle(
      fontFamily: 'Avenir',
      fontSize: 16,
      fontWeight: FontWeight.w500,
      height: 1.5,
    ),
    double messageBorderRadius = 20,
    double messageInsetsHorizontal = 20,
    double messageInsetsVertical = 16,
    Color primaryColor = primary,
    TextStyle receivedMessageBodyTextStyle = const TextStyle(
      color: neutral0,
      fontFamily: 'Avenir',
      fontSize: 16,
      fontWeight: FontWeight.w500,
      height: 1.5,
    ),
    TextStyle receivedMessageCaptionTextStyle = const TextStyle(
      color: neutral2,
      fontFamily: 'Avenir',
      fontSize: 12,
      fontWeight: FontWeight.w500,
      height: 1.333,
    ),
    Color receivedMessageDocumentIconColor = primary,
    TextStyle receivedMessageLinkDescriptionTextStyle = const TextStyle(
      color: neutral0,
      fontFamily: 'Avenir',
      fontSize: 14,
      fontWeight: FontWeight.w400,
      height: 1.428,
    ),
    TextStyle receivedMessageLinkTitleTextStyle = const TextStyle(
      color: neutral0,
      fontFamily: 'Avenir',
      fontSize: 16,
      fontWeight: FontWeight.w800,
      height: 1.375,
    ),
    Color secondaryColor = secondary,
    Widget? seenIcon,
    Widget? sendButtonIcon,
    Widget? sendingIcon,
    TextStyle sentMessageBodyTextStyle = const TextStyle(
      color: neutral7,
      fontFamily: 'Avenir',
      fontSize: 16,
      fontWeight: FontWeight.w500,
      height: 1.5,
    ),
    TextStyle sentMessageCaptionTextStyle = const TextStyle(
      color: neutral7WithOpacity,
      fontFamily: 'Avenir',
      fontSize: 12,
      fontWeight: FontWeight.w500,
      height: 1.333,
    ),
    Color sentMessageDocumentIconColor = neutral7,
    TextStyle sentMessageLinkDescriptionTextStyle = const TextStyle(
      color: neutral7,
      fontFamily: 'Avenir',
      fontSize: 14,
      fontWeight: FontWeight.w400,
      height: 1.428,
    ),
    TextStyle sentMessageLinkTitleTextStyle = const TextStyle(
      color: neutral7,
      fontFamily: 'Avenir',
      fontSize: 16,
      fontWeight: FontWeight.w800,
      height: 1.375,
    ),
    Color userAvatarImageBackgroundColor = Colors.transparent,
    List<Color> userAvatarNameColors = colors,
    TextStyle userAvatarTextStyle = const TextStyle(
      color: neutral7,
      fontFamily: 'Avenir',
      fontSize: 12,
      fontWeight: FontWeight.w800,
      height: 1.333,
    ),
    TextStyle userNameTextStyle = const TextStyle(
      fontFamily: 'Avenir',
      fontSize: 12,
      fontWeight: FontWeight.w800,
      height: 1.333,
    ),
  }) : super(
            attachmentButtonIcon: attachmentButtonIcon,
            backgroundColor: backgroundColor,
            dateDividerTextStyle: dateDividerTextStyle,
            deliveredIcon: deliveredIcon,
            documentIcon: documentIcon,
            emptyChatPlaceholderTextStyle: emptyChatPlaceholderTextStyle,
            errorColor: errorColor,
            errorIcon: errorIcon,
            inputBackgroundColor: inputBackgroundColor,
            inputBorderRadius: inputBorderRadius,
            inputPadding: inputPadding,
            inputTextColor: inputTextColor,
            inputTextCursorColor: inputTextCursorColor,
            inputTextDecoration: inputTextDecoration,
            inputTextStyle: inputTextStyle,
            messageBorderRadius: messageBorderRadius,
            messageInsetsHorizontal: messageInsetsHorizontal,
            messageInsetsVertical: messageInsetsVertical,
            primaryColor: primaryColor,
            receivedMessageBodyTextStyle: receivedMessageBodyTextStyle,
            receivedMessageCaptionTextStyle: receivedMessageCaptionTextStyle,
            receivedMessageDocumentIconColor: receivedMessageDocumentIconColor,
            receivedMessageLinkDescriptionTextStyle:
                receivedMessageLinkDescriptionTextStyle,
            receivedMessageLinkTitleTextStyle:
                receivedMessageLinkTitleTextStyle,
            secondaryColor: secondaryColor,
            seenIcon: seenIcon,
            sendButtonIcon: sendButtonIcon,
            sendingIcon: sendingIcon,
            sentMessageBodyTextStyle: sentMessageBodyTextStyle,
            sentMessageCaptionTextStyle: sentMessageCaptionTextStyle,
            sentMessageDocumentIconColor: sentMessageDocumentIconColor,
            sentMessageLinkDescriptionTextStyle:
                sentMessageLinkDescriptionTextStyle,
            sentMessageLinkTitleTextStyle: sentMessageLinkTitleTextStyle,
            userAvatarImageBackgroundColor: userAvatarImageBackgroundColor,
            userAvatarNameColors: userAvatarNameColors,
            userAvatarTextStyle: userAvatarTextStyle,
            userNameTextStyle: userNameTextStyle);
}
